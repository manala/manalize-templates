# -*- mode: ruby -*-
# vi: set ft=ruby :

# Metadata
metadata = YAML::load(File.read(File.dirname(__FILE__) + '/metadata.yml'))

# Manala
manala = YAML::load(File.read(File.dirname(__FILE__) + '/../manala.yml'))

Vagrant.require_version '>= 1.8.4'

Vagrant.configure(2) do |config|

  # Ssh
  config.ssh.username      = 'app'
  config.ssh.forward_agent = true

  # Vm
  config.vm.box           = 'manala/app-dev-debian'
  config.vm.box_version   = '~> 3.0.8'
  config.vm.hostname      = manala['app']['name'] + '.dev'
  config.vm.network       'private_network', type: 'dhcp'
  config.vm.define        'localhost' do |localhost| end
  config.vm.synced_folder '..', metadata['app']['dir'],
    type: 'nfs',
    mount_options: ['nolock', 'actimeo=1', 'fsc']

  # Vm - Provider - Virtualbox
  config.vm.provider 'virtualbox' # Force provider
  config.vm.provider :virtualbox do |virtualbox|
    virtualbox.name   = manala['app']['name']
    virtualbox.memory = manala['system']['memory'] || 1024
    virtualbox.cpus   = manala['system']['cpus'] || 1
    # Use host dns
    virtualbox.customize ['modifyvm', :id, '--natdnshostresolver1', 'on']
    virtualbox.customize ['modifyvm', :id, '--natdnsproxy1', 'on']
    # Utc
    virtualbox.customize ['modifyvm', :id, '--rtcuseutc', 'on']
    # Performances
    virtualbox.customize ['modifyvm', :id, '--pae', 'on']
    virtualbox.customize ['modifyvm', :id, '--acpi', 'on']
    virtualbox.customize ['modifyvm', :id, '--ioapic', 'on']
    virtualbox.customize ['modifyvm', :id, '--chipset', 'ich9']
    # Performances - Network
    virtualbox.customize ['modifyvm', :id, '--nictype1', '82543GC']
    virtualbox.customize ['modifyvm', :id, '--nictype2', '82543GC']
    # Performances - Storage
    virtualbox.customize ['storagectl', :id, '--name', 'SATA Controller', '--controller', 'IntelAHCI', '--portcount', '1', '--hostiocache', 'on']
    virtualbox.customize ['storageattach', :id, '--storagectl', 'SATA Controller', '--port', '0', '--device', '0', '--nonrotational', 'on']
  end

  # Vm - Provision - Dotfiles
  for dotfile in ['.ssh/config', '.gitconfig', '.gitignore', '.composer/auth.json']
    if File.exists?(File.join(Dir.home, dotfile)) then
      config.vm.provision dotfile, type: 'file', run: 'always' do |file|
        file.source      = '~/' + dotfile
        file.destination = '/home/' + config.ssh.username + '/' + dotfile
      end
    end
  end

  # Vm - Provision - Setup
  config.vm.provision 'provision', type: 'shell' do |shell|
    shell.privileged = false
    shell.keep_color = true
    shell.inline     = 'make --silent --directory={# app_dir #} provision-ansible provision ANSIBLE_EXTRA_VARS="{\"manala\":{\"update\":true}}"'
    shell.env = {
      'ANSIBLE_FORCE_COLOR' => true
    }
  end

  # Plugins - Landrush
  if Vagrant.has_plugin?('landrush')
    config.landrush.enabled            = true
    config.landrush.tld                = config.vm.hostname
    config.landrush.guest_redirect_dns = false
  end

end
